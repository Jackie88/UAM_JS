angular.module("email-config", []);

angular.module("email-config").controller("ConfigController", function($state, $scope, $rootScope, configService) {
    $scope.$parent.title = "Config";
    $scope.skins = [ {
        value: "default",
        text: "default"
    }, {
        value: "green",
        text: "green"
    }, {
        value: "yellow",
        text: "yellow"
    } ];
    $scope.save_options = function() {
        configService.setInboxInterval($scope.interval);
        configService.setSkinVariant($scope.skinVariant);
        $rootScope.$emit("updateSkin", $scope.skinVariant);
    };
    var initialize = function() {
        $scope.interval = configService.getInboxInterval();
        $scope.skinVariant = configService.getSkinVariant();
    };
    initialize();
});

angular.module("email-config").service("configService", function(localStorageService) {
    var DEFAULT_INTERVAL = 1e4;
    var DEFAULT_SKIN = "default";
    this.getInboxInterval = function() {
        if (localStorageService.get("inboxInterval") !== null) {
            return localStorageService.get("inboxInterval");
        } else {
            return DEFAULT_INTERVAL;
        }
    };
    this.setInboxInterval = function(interval) {
        localStorageService.set("inboxInterval", parseInt(interval, 10));
    };
    this.getSkinVariant = function() {
        if (localStorageService.get("skin") !== null) {
            return localStorageService.get("skin");
        } else {
            return DEFAULT_SKIN;
        }
    };
    this.setSkinVariant = function(skin) {
        localStorageService.set("skin", skin);
    };
});

angular.module("email-create", []);

angular.module("email-create").controller("CreateController", function($state, $stateParams, $scope, $http) {
    $scope.borders = false;
    $scope.$parent.title = "Napisz mail";
    $scope.mailValid = /^((\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*)\s*[,]{0,1}\s*)+$/;
    if ($stateParams.emailId !== "") {
        $http.get("/emails/" + $stateParams.emailId).success(function(data) {
            console.log(data.title);
            $scope.mailTitle = "Re: " + data.title;
            $scope.receivers = data.sender;
            $scope.content = "\n\n\n" + data.sender + " napisał/a:\n\n" + data.content;
        });
    }
    $scope.send = function() {
        $scope.borders = true;
        if ($scope.NewMail.$valid) {
            $scope.adr = $scope.receivers.split(",");
            $http.post("/sent", {
                id: Date.now(),
                title: $scope.mailTitle,
                content: $scope.content,
                receivers: $scope.adr,
                sent: Date.now()
            }).success(function(data) {
                $scope.createSentRes = data;
                $scope.reset();
                $state.go("sent");
            });
        }
    };
    $scope.reset = function() {
        $scope.receivers = "";
        $scope.mailTitle = "";
        $scope.content = "";
        $scope.borders = false;
    };
});

angular.module("email-inbox", []);

angular.module("email-inbox").controller("InboxController", function($timeout, $scope, $state, $http, configService, emailsData) {
    $scope.$parent.title = "Odebrane";
    $scope.reload = 5e3;
    var interval = configService.getInboxInterval();
    $scope.getData = function() {
        emailsData.getEmails().then(function(response) {
            $scope.emails = response.data;
        });
    };
    $scope.deleteEmail = function(mailId) {
        console.log("usuwam " + mailId);
        emailsData.deleteEmail(mailId).then(function(response) {
            $scope.deleteEmail(mailId);
        });
    };
    $scope.getData();
    $scope.intervalFunction = function() {
        $scope.timer = $timeout(function() {
            $scope.getData();
            $scope.intervalFunction();
        }, interval);
    };
    $scope.intervalFunction();
    $scope.$on("$destroy", function() {
        if ($scope.timer) {
            $timeout.cancel($scope.timer);
        }
    });
}).factory("emailsData", function($http) {
    getEmails = function() {
        return $http.get("/emails");
    };
    deleteEmail = function(id) {
        $http.delete("/emails/" + id);
    };
    return {
        getEmails: getEmails,
        deleteEmail: deleteEmail
    };
});

angular.module("email-inbox").directive("inboxList", function() {
    return {
        restrict: "E",
        scope: {
            emails: "="
        },
        template: '<ul id="list" class="emailList"></ul>',
        link: function(scope, element, attributes) {
            var list = element[0].childNodes[0];
            list = angular.element(list);
            var emailsList = attributes;
            scope.$watch(attributes.emails, function(value, oldValue) {
                if (value && oldValue) {
                    if (value.length === oldValue.length) {
                        return;
                    }
                }
                while (list[0].firstChild) {
                    list[0].removeChild(list[0].firstChild);
                }
                if (value) {
                    for (var i = value.length - 1; i >= 0; i--) {
                        list.append(prepareEmail(value[i]));
                    }
                }
            });
            scope.deleteEmail = function(mailId) {};
            var prepareEmail = function(email) {
                var listElement = document.createElement("li");
                listElement.id = email.id;
                listElement.className = "emailList";
                var header = document.createElement("h3");
                header.innerHTML = "Od: " + email.sender;
                var title = document.createElement("p");
                title.innerHTML = "Tytuł: " + email.title;
                var content = document.createElement("p");
                content.className = "content";
                content.innerHTML = email.content;
                var deleteButton = document.createElement("button");
                deleteButton.id = email.id;
                deleteButton.innerHTML = "Usuń";
                listElement.appendChild(header);
                listElement.appendChild(title);
                listElement.appendChild(content);
                listElement.appendChild(deleteButton);
                return listElement;
            };
        }
    };
});

angular.module("email-sent", []);

angular.module("email-sent").controller("SentController", function($scope, $state, $http) {
    $scope.$parent.title = "Wysłane";
    $scope.emails = [];
    $scope.getData = function() {
        $http.get("/sent").success(function(data) {
            $scope.emails = data;
            console.log(data);
        });
    };
    $scope.getDateByTimestamp = function(timeStamp) {
        var date = new Date(timeStamp);
        var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
        return date.getDate() + " " + months[date.getMonth()] + " " + date.getFullYear();
    };
    $scope.getData();
});

(function() {
    var app = angular.module("email-view", []);
    app.config(function($stateProvider) {
        $stateProvider.state("respond", {
            url: "/create/:receviers/:title",
            controller: "RepsponController"
        });
    });
})();

angular.module("email-view").controller("ViewController", function($stateParams, $scope, $http, $state) {
    $scope.updateEmail = function() {
        $http.put("/emails/" + $stateParams.emailId, {
            read: true
        }).success(function(data) {
            $scope.udateEmailRes = data;
        });
    };
    $scope.getEmail = function() {
        $http.get("/emails/" + $stateParams.emailId).success(function(data) {
            $scope.mail = data;
            $scope.updateEmail();
            $scope.getDateByTimestamp(data.received);
        });
    };
    $scope.deleteEmail = function() {
        $http.delete("/emails/" + $stateParams.emailId, {}).success(function(data) {
            $state.go("inbox");
        });
    };
    $scope.getDateByTimestamp = function(timeStamp) {
        var date = new Date(timeStamp);
        var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
        $scope.date = date.getDate() + " " + months[date.getMonth()] + " " + date.getFullYear();
    };
    $scope.getEmail();
});

(function() {
    var app = angular.module("emailApp", [ "ui.router", "email-inbox", "email-sent", "email-view", "email-create", "email-config", "LocalStorageModule" ]);
    app.controller("mainController", function($scope, $rootScope, configService) {
        $scope.title = "Welcome";
        $scope.reloadTime = 31e3;
        var initialize = function() {
            var skinLoad = configService.getSkinVariant();
            $rootScope.skinVariant = skinLoad;
        };
        initialize();
        $rootScope.$on("updateSkin", function(event, skinVariant) {
            $rootScope.skinVariant = skinVariant;
        });
    });
    app.config(function($stateProvider, $urlRouterProvider) {
        $urlRouterProvider.otherwise("/home");
        $stateProvider.state("home", {
            url: "/home",
            templateUrl: "src/Welcome.html"
        }).state("view", {
            url: "/view/:emailId",
            templateUrl: "src/ViewMail/View.html",
            controller: "ViewController"
        }).state("inbox", {
            url: "/inbox",
            templateUrl: "src/EmailList/Inbox/Inbox.html",
            controller: "InboxController"
        }).state("sent", {
            url: "/sent",
            templateUrl: "src/EmailList/Sent/Sent.html",
            controller: "SentController"
        }).state("create", {
            url: "/create/:emailId",
            templateUrl: "src/Create/Create.html",
            controller: "CreateController"
        }).state("config", {
            url: "/config",
            templateUrl: "src/Configuration/Config.html",
            controller: "ConfigController"
        });
    });
})();